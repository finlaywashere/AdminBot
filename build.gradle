
plugins {
    // Apply the java plugin to add support for Java
    id 'java'

    // Apply the application plugin to add support for building a CLI application
    id 'application'
    id 'com.github.johnrengelman.shadow' version '5.1.0'
}
repositories {
	mavenCentral()
	maven {
		name 'm2-dv8tion'
		url 'https://m2.dv8tion.net/releases'
	}
}
sourceSets{
	main{
		java{
			srcDir 'src/'
		}
	}
}
dependencies {
	compile 'net.dv8tion:JDA:4.2.1_253'
	compile group: 'org.apache.logging.log4j', name: 'log4j-api', version: '2.14.0'
	compile group: 'org.apache.logging.log4j', name: 'log4j-core', version: '2.14.0'
	compile group: 'org.slf4j', name: 'slf4j-log4j12', version: '2.0.0-alpha1'
	compile group: 'org.slf4j', name: 'slf4j-api', version: '2.0.0-alpha1'
	compile group: 'org.slf4j', name: 'slf4j-api', version: '2.0.0-alpha1'
	compile group: 'mysql', name: 'mysql-connector-java', version: '8.0.15'
	runtime "mysql:mysql-connector-java:8.0.15"
	compile group: 'javax.mail', name: 'mail', version: '1.5.0-b01'
}

jar {
    classifier = 'all'
    manifest {
      attributes(
        'Class-Path': configurations.compile.collect { it.getName() }.join(' '),
        'Main-Class': 'xyz.finlaym.adminbot.Bot'
      )
    }
}
import com.github.jengelman.gradle.plugins.shadow.tasks.ShadowJar
task libJar(type: ShadowJar) {
    classifier = 'lib'
    from sourceSets.main.output
    exclude 'xyz/finlaym/adminbot/**'
    configurations = [project.configurations.runtime]
}

application {
    // Define the main class for the application
    mainClassName = 'xyz.finlaym.adminbot.Bot'
}

build.dependsOn libJar
